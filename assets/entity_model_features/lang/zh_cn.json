{
  "entity_model_features.config.optifine_fallback_properties": "使用备用的 .properties 文件",
  "entity_model_features.config.optifine_fallback_properties.tooltip": "如果启用，当找不到常规的 .properties 文件时，EMF将尝试加载一个备用的 .properties 文件。\n例如：如果 pig_baby.properties 文件不存在，pig_baby.jem 模型将会回退使用 pig.properties 文件。\nOptiFine 只能使用这种备用机制，实际上它不允许像 pig_baby.properties 这样为每个模型单独设置属性。",
  "entity_model_features.config.show_reload_error_toast": "显示重载错误提示",
  "entity_model_features.config.show_reload_error_toast.tooltip": "如果启用，当资源包重载期间发生错误时，会显示一个弹窗消息。\n这有助于你了解重载过程中是否出了问题。",
  "entity_model_features.config.load_warn.1": "EMF 加载时遇到错误",
  "entity_model_features.config.load_warn.2": "EMF可以从“模型 > 调试”中再次记录这些错误",
  "entity_model_features.config.load_warn.3": "请检查你的日志或EMF设置以获取详细信息",
  "entity_model_features.config.load_warn.title": "再次记录所有加载错误",
  "entity_model_features.config.load_warn.title2": "再次记录所有加载错误 (附带堆栈跟踪)",
  "entity_model_features.config.load_warn.tooltip": "此选项将把上次资源包重载时遇到的所有EMF加载错误，按顺序重新打印到日志中。\n注意：这里的某些错误可能帮助不大，因为它们可能缺少周围的日志上下文。",
  "entity_model_features.config.optifine_floor": "向下取整模型UV坐标",
  "entity_model_features.config.optifine_floor.tooltip": "OptiFine 会将自定义模型盒的UV值全部向下取整（即把它们都变成整数）。\n此设置将使EMF也执行相同的操作。\n如果EMF发现某个模型的UV没有被取整，它也会在日志中记录下来。",
  "entity_model_features.config.optifine_syntax": "启用CEM动画语法限制",
  "entity_model_features.config.optifine_syntax.tooltip": "如果启用，将强制执行OptiFine的CEM语法限制，例如：\n- 动画中的骨骼ID不能以下划线“_”或数字开头。\n- 数字不能以“.”开头，如“.9”。\n- 名为“render”的骨骼不能被动画引用。\n启用此设置后，任何违反这些规则的动画都将被记录为错误并失效。",
  "entity_model_features.config.optifine_subfolders": "子文件夹中的模型必须有变体",
  "entity_model_features.config.optifine_subfolders.tooltip": "在OptiFine中，模型文件的子文件夹选项仅在该模型有变体时才有效。\n例如：'optifine/cem/skeleton/skeleton.jem' 只有在它有变体（如 'optifine/cem/skeleton/skeleton2.jem' 或一个 .properties 文件）时才会被加载。\n此设置将使EMF也强制执行此规则。\n如果EMF发现某个模型没有变体，它会在日志中记录下来。",
  "entity_model_features.config.debug_right_click": "右击实体时显示EMF调试数据",
  "entity_model_features.config.debug_right_click.tooltip": "如果启用，当右击一个实体时，EMF的调试信息将被打印到日志和聊天框中。",
  "entity_model_features.config.ebe_config_modify": "增强型方块实体 (EBE) 模组补丁",
  "entity_model_features.config.ebe_config_modify.tooltip": "如果启用，EMF将被允许修改EBE模组的配置。\n如果某个方块实体加载了自定义的EMF模型，EMF会自动为该方块实体禁用EBE的功能。\n注意：EMF之后无法自动重新启用这些设置，如果需要，你必须手动操作。",
  "entity_model_features.config.large_mob_lod": "为大型生物保留LOD",
  "entity_model_features.config.large_mob_lod.tooltip": "如果启用，此选项将根据生物的大小减小上方设置中细节层次（LOD）的影响。\n大型生物的动画跳帧会比小型生物更不明显。",
  "entity_model_features.config.lod": "动画LOD距离",
  "entity_model_features.config.lod.tooltip": "设置一个距离，超过该距离后动画将开始跳帧，以降低细节层次（LOD）。这有助于提升性能。\n无 = 不跳帧\n16 = 距离玩家每16格远，动画就跳过1帧\n数值越低意味着跳帧越多，性能提升也越大，但动画的帧率降低会更明显。",
  "entity_model_features.config.low_fps_lod": "在低FPS时保留LOD",
  "entity_model_features.config.low_fps_lod.tooltip": "如果启用，此选项将根据你的FPS降低上方设置中细节层次（LOD）的影响。\n仅在FPS低于60时生效，因为在较低的FPS下，跳帧会变得越来越明显。",
  "entity_model_features.config.performance": "性能设置",
  "entity_model_features.config.print_mode": "模型导出",
  "entity_model_features.config.print_mode.all_log": "所有模型 - 仅日志",
  "entity_model_features.config.print_mode.all_log_jem": "所有模型 - 日志和 .jem 文件",
  "entity_model_features.config.print_mode.log": "未知模型 - 仅日志",
  "entity_model_features.config.print_mode.log_jem": "未知模型 - 日志和 .jem 文件",
  "entity_model_features.config.print_mode.tooltip": "此功能将在每次重载时！！为EMF能访问到的任何模型打印出部件信息或一个完整的 .jem 文件。\n重载后，你可以在“MC根目录/emf/export”文件夹中找到 .jem 文件。\n这些 .jem 文件已为 Blockbench 准备就绪，包含正确的轴心点、模型盒和UV。\n“未知模型”指的是那些不被OptiFine CEM支持的模型。",
  "entity_model_features.config.debug_hover": "仅在悬停时调试渲染",
  "entity_model_features.config.debug_hover.tooltip": "使上方的渲染设置仅对客户端鼠标悬停的实体生效。\n也就是说，只对你正盯着看的那个实体生效。",
  "entity_model_features.config.render.lines_texture": "纹理上叠加线框",
  "entity_model_features.config.render.lines_texture_flash": "纹理上闪烁线框",
  "entity_model_features.config.update": "模型更新频率",
  "entity_model_features.config.update.tooltip": "设置生物模型为其状态变化（如生命值、年龄）而更新的频率。\n从不 = 从不更新\n慢速 = 3-5秒\n普通 = 约1秒\n快速 = 小于1秒\n即时 = 立刻更新（当有数百个生物时可能导致卡顿）",
  "entity_model_features.config.models": "所有模型",
  "entity_model_features.config.models.enabled": "启用模型",
  "entity_model_features.config.models.enabled.tooltip": "设置是否加载给定的 .jem 模型文件。",
  "entity_model_features.config.models.part_names": "此模型的部件名称",
  "entity_model_features.config.models.export": "将模型导出为 .jem 文件",
  "entity_model_features.config.models.export.tooltip": "将此模型导出为 .jem 文件到“MC根目录/emf/export”文件夹。\n此文件可以在 Blockbench 中打开，并包含自定义模型所需的所有数据，包括轴心点、模型盒和UV。\n额外的数据，如该 .jem 文件在资源包中的应放位置，也会被打印到日志中。",
  "entity_model_features.config.models.export.success": "模型导出成功",
  "entity_model_features.config.models.export.fail": "模型无法导出，因为：",
  "entity_model_features.config.models.explain": "此处并非所有可见部件都会被导出，\n只有已声明的部件才会被导出。\n导出后，你可以在游戏日志中查看缺失部件的变换细节。",
  "entity_model_features.config.models.arrows": "arrow.jem 和 spectral_arrow.jem 不会在此处显示，但均受支持。",
  "entity_model_features.config.models.cape": "\nplayer_cape.jem 不会在此处显示，但也受支持，它是 player.jem 的一个精确副本，但只有 'cloak'（披风）部分。",
  "entity_model_features.config.models.file_names": "文件名和位置",
  "entity_model_features.config.models_text": "这些是所有可通过EMF修改的模型。\n这些界面只会显示/导出这些模型未经修改的状态信息。\n如果你想查看模型的当前状态，你需要在游戏中观察该模型。",
  "entity_model_features.config.math": "动画运算详情",
  "entity_model_features.config.math.explain": "本部分提供了可用于EMF自定义实体模型动画的数学函数和变量的详细信息。\n包括通过API从其他模组添加到EMF的任何内容。\n点击每个函数和变量可查看更多详情。",
  "entity_model_features.config.variables": "变量",
  "entity_model_features.config.variables.explain": "当前已注册可用于EMF自定义实体模型动画的所有数学变量列表。\n点击每个变量可查看更多详情。",
  "entity_model_features.config.functions": "函数",
  "entity_model_features.config.functions.explain": "当前已注册可用于EMF自定义实体模型动画的所有数学函数列表。\n点击每个函数可查看更多详情。",
  "entity_model_features.config.player_settings": "玩家设置",
  "entity_model_features.config.only_client": "仅修改你自己的玩家模型",
  "entity_model_features.config.only_client.tooltip": "如果启用，自定义玩家模型将只应用于你自己的玩家，\n在多人游戏中会忽略所有其他玩家。",
  "entity_model_features.config.prevent_hand": "阻止第一人称手臂动画",
  "entity_model_features.config.prevent_hand.tooltip": "如果启用，将强制阻止所有自定义EMF动画在第一人称手臂模型上播放。",
  "entity_model_features.config.reset_player": "每次渲染时重置玩家模型",
  "entity_model_features.config.reset_player.tooltip": "此选项使EMF在每次渲染玩家模型前，重置其所有原版部件的变换。\n仅当玩家存在自定义模型时适用。\n这并非标准行为，但考虑到有许多模组会修改玩家动画，\n此设置极大地降低了模组与动画包之间玩家动画兼容性的难度。\n例如：玩家表情动作模组。\n这种兼容性仍然需要资源包作者方面进行适配。",
  "entity_model_features.config.variation_base": "变体需要基础模型",
  "entity_model_features.config.variation_base.tooltip": "在OptiFine中，为变体模型提供一个“基础”模型是最佳实践，因为没有基础模型时OptiFine的行为可能非常不稳定。启用此设置意味着 'pig2.jem' 如果没有 'pig.jem' 就不会作为变体生效。\nEMF本身不要求这样做，但如果启用此选项，它会强制执行此规则，以尽可能保持与OptiFine的兼容性。\n你可以通过在EMF设置中导出默认模型来轻松获取一个（路径：'模型 > 所有模型 > *模型名* > 导出'）。\n或者干脆禁用此设置。",
  "entity_model_features.config.double_chest_fix": "修复大箱子模型的日志错误",
  "entity_model_features.config.double_chest_fix.tooltip": "因为大箱子模型 'chest_large.jem' 在代码中必须被拆分成两个一半的模型，\n这可能会导致日志中出现大量关于缺失左/右半边的垃圾信息。\n启用此选项可以修复这个问题，并在一定程度上修复了动画引用箱子另一边的问题。\n但仍然强烈建议你将左半边和右半边的动画分开制作。\n此项作为可选项，是因为其他影响箱子模型的模组可能会与此功能冲突。",
  "entity_model_features.config.iris_shadow_skip": "跳过光影着色器的阴影通道动画",
  "entity_model_features.config.iris_shadow_skip.tooltip": "这将使实体模型在每一帧中不会因为渲染和光影着色器（Iris）的阴影通道而播放两次动画。\n此选项应始终保持开启，仅为应对未来可能破坏性的Iris API更改而保留。",
  "entity_model_features.config.ebe_warn.1": "一些EBE模组的选项已被EMF强制禁用",
  "entity_model_features.config.ebe_warn.2": "这是因为一个资源包正在为该方块实体加载一个自定义模型",
  "entity_model_features.config.ebe_warn.3": "当前禁用的选项：",
  "entity_model_features.config.ebe_warn.4": "这可以在EMF的模型设置中更改",
  "entity_model_features.suffix_property": "模型后缀 (可选)\n匹配实体模型最后被设置的随机模型后缀编号\n默认为 0\n例如: modelSuffix.1= 2 4 6\n§amodelSuffix.<n>=<列表>",
  "entity_model_features.rule_property": "模型规则 (可选)\n匹配实体模型最后匹配上的随机模型规则编号\n默认为 0\n例如: modelRule.1= 2 4 6\n§amodelRule.<n>=<列表>",
  "entity_model_features.var_property": "实体浮点变量 (可选)\n匹配实体的CEM动画变量值\n默认为 0\n例如: (对于动画变量 'var.xyz') var.1.xyz= 2 4 6\n§avar.<n>.<变量>=<列表>",
  "entity_model_features.varb_property": "实体布尔变量 (可选)\n匹配实体的CEM动画变量值\n默认为 false\n例如: (对于动画变量 'varb.xyz') varb.1.xyz=true\n§avarb.<n>.<变量>=<true|false>",
  "entity_model_features.global_var_property": "全局浮点变量 (可选)\n匹配CEM动画的全局变量值\n默认为 0\n例如: (对于动画变量 'global_var.xyz') global_var.1.xyz= 2 4 6\n§aglobal_var.<n>.<变量>=<列表>",
  "entity_model_features.global_varb_property": "全局布尔变量 (可选)\n匹配CEM动画的全局变量值\n默认为 false\n例如: (对于动画变量 'global_varb.xyz') global_varb.1.xyz=true\n§aglobal_varb.<n>.<变量>=<true|false>",
  "entity_model_features.config.function_explanation.abs": "abs(x)\n获取一个数的绝对值。会将负数转为正数。",
  "entity_model_features.config.function_explanation.acos": "acos(x)\n获取x的反余弦值。",
  "entity_model_features.config.function_explanation.asin": "asin(x)\n获取x的反正弦值。",
  "entity_model_features.config.function_explanation.atan": "atan(x)\n获取x的反正切值。",
  "entity_model_features.config.function_explanation.atan2": "atan2(y, x)\n获取点(x, y)与X轴正方向之间的夹角。",
  "entity_model_features.config.function_explanation.between": "between(x, min, max)\n检查一个值是否在最小值和最大值之间。",
  "entity_model_features.config.function_explanation.catch": "catch(x,c,id)\n将返回x，但如果x不是数字(NaN)或导致其他动画错误，则会返回c。\nid是可选的，如果添加了id，该函数将在日志中打印出使用c的原因以及此id。\n主要用于动画调试，如果有东西可能触发这个，你真该去修复它而不是依赖这个。",
  "entity_model_features.config.function_explanation.catmullrom": "catmullrom(k, x, y, z, w)\n使用Catmull-Rom样条函数，根据控制点z和w，在x和y之间进行插值。",
  "entity_model_features.config.function_explanation.ceil": "ceil(x)\n将x向上取整到最接近的整数。",
  "entity_model_features.config.function_explanation.clamp": "clamp(x, min, max)\n将一个数限制在最小值和最大值之间。",
  "entity_model_features.config.function_explanation.cos": "cos(x)\n获取x的余弦值。",
  "entity_model_features.config.function_explanation.cubicbezier": "cubicbezier(k, x, y, z, w)\n使用三次贝塞尔样条函数，根据控制点z和w，在x和y之间进行插值。",
  "entity_model_features.config.function_explanation.degdiff": "degdiff(x, y)\n返回两个角度值x和y之间的最短角度差。",
  "entity_model_features.config.function_explanation.equals": "equals(x, y, epsilon)\n在给定的误差范围内比较两个浮点数。",
  "entity_model_features.config.function_explanation.exp": "exp(x)\n获取e（欧拉常数）的x次幂。",
  "entity_model_features.config.function_explanation.floor": "floor(x)\n将x向下取整到最接近的整数。",
  "entity_model_features.config.function_explanation.fmod": "fmod(x, y)\n类似于%运算符，但返回值的符号总是与除数相同。",
  "entity_model_features.config.function_explanation.frac": "frac(x)\n获取x的小数部分（小数点后面的部分）。",
  "entity_model_features.config.function_explanation.hermite": "hermite(k, x, y, z, w)\n使用Hermite样条函数，根据控制点z和w，在x和y之间进行插值。",
  "entity_model_features.config.function_explanation.if": "if(cond, val, [cond2, val2, ...], val_else)\n根据一个或多个条件选择一个值。",
  "entity_model_features.config.function_explanation.ifb": "if(cond, val, [cond2, val2, ...], val_else)\n根据一个或多个条件选择一个值。\n只返回布尔值。",
  "entity_model_features.config.function_explanation.in": "in(x, val1, val2, ...)\n检查一个值是否等于列表中的某个值。",
  "entity_model_features.config.function_explanation.keyframe": "keyframe(k, a, b, c,...)\n根据当前帧'k'和关键帧，在值之间平滑插值。'a'是'k=0'，'b'是'k=1'，'c'是'k=2'，以此类推。",
  "entity_model_features.config.function_explanation.keyframeloop": "keyframeloop(k, a, b, c,...)\n与keyframe类似，但在'k'大于关键帧数量时，动画会循环回到'a'帧。",
  "entity_model_features.config.function_explanation.lerp": "lerp(k, x, y)\n在X和Y之间进行线性插值。",
  "entity_model_features.config.function_explanation.log": "log(x)\n获取x的自然对数。",
  "entity_model_features.config.function_explanation.max": "max(x, y, ...)\n从一列数中获取最大的数。",
  "entity_model_features.config.function_explanation.min": "min(x, y, ...)\n从一列数中获取最小的数。",
  "entity_model_features.config.function_explanation.nbt": "nbt(x,y)\n一个布尔函数，如果实体拥有与查询y匹配的NBT标签x，则返回true。\nx相当于NBT随机属性中'nbt.<n>.'之后的内容。\ny相当于NBT随机属性中'='之后的内容。\n例如：NBT属性中的'nbt.1.SleepingX=exists:true'在动画函数中将是'nbt(SleepingX,exists:true)'。",
  "entity_model_features.config.function_explanation.pow": "pow(x, y)\n获取x的y次幂。",
  "entity_model_features.config.function_explanation.print": "print(id, n, x)\n每N帧打印一次值“x”。",
  "entity_model_features.config.function_explanation.printb": "printb(id, n, x)\n每N帧打印一次布尔值“x”。",
  "entity_model_features.config.function_explanation.quadbezier": "quadbezier(k, x, y, z)\n使用二次贝塞尔样条函数，根据控制点z，在x和y之间进行插值。",
  "entity_model_features.config.function_explanation.raddiff": "raddiff(x, y)\n返回两个弧度值x和y之间的最短弧度差。",
  "entity_model_features.config.function_explanation.random": "random(seed)\n生成一个0到1之间的随机数。提供种子将总是返回相同的结果。种子是可选的。",
  "entity_model_features.config.function_explanation.randomb": "random(seed)\n随机生成true或false。提供种子将总是返回相同的结果。种子是可选的。",
  "entity_model_features.config.function_explanation.round": "round(x)\n将x四舍五入到最接近的整数。",
  "entity_model_features.config.function_explanation.signum": "signum(x)\n获取x的符号（正或负）。",
  "entity_model_features.config.function_explanation.sin": "sin(x)\n获取x的正弦值。",
  "entity_model_features.config.function_explanation.sqrt": "sqrt(x)\n获取x的平方根。",
  "entity_model_features.config.function_explanation.tan": "tan(x)\n获取x的正切值。",
  "entity_model_features.config.function_explanation.todeg": "todeg(rad)\n将弧度转换为角度。",
  "entity_model_features.config.function_explanation.torad": "torad(deg)\n将角度转换为弧度。",
  "entity_model_features.config.function_explanation.wrapdeg": "wrapdeg(x)\n将角度值x包装到匹配的-180到180范围内。",
  "entity_model_features.config.function_explanation.wraprad": "wraprad(x)\n将弧度值x包装到匹配的-π到π范围内。",
  "entity_model_features.config.function_explanation.easeinback": "easeinback(k, x, y)\n使用缓入-回弹函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinbounce": "easeinbounce(k, x, y)\n使用缓入-弹跳函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeincirc": "easeincirc(k, x, y)\n使用缓入-圆弧函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeincubic": "easeincubic(k, x, y)\n使用缓入-三次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinelastic": "easeinelastic(k, x, y)\n使用缓入-橡皮筋函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinexpo": "easeinexpo(k, x, y)\n使用缓入-指数函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutback": "easeinoutback(k, x, y)\n使用缓入缓出-回弹函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutbounce": "easeinoutbounce(k, x, y)\n使用缓入缓出-弹跳函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutcirc": "easeinoutcirc(k, x, y)\n使用缓入缓出-圆弧函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutcubic": "easeinoutcubic(k, x, y)\n使用缓入缓出-三次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutelastic": "easeinoutelastic(k, x, y)\n使用缓入缓出-橡皮筋函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutexpo": "easeinoutexpo(k, x, y)\n使用缓入缓出-指数函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutquad": "easeinoutquad(k, x, y)\n使用缓入缓出-二次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutquart": "easeinoutquart(k, x, y)\n使用缓入缓出-四次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutquint": "easeinoutquint(k, x, y)\n使用缓入缓出-五次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinoutsine": "easeinoutsine(k, x, y)\n使用缓入缓出-正弦函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinquad": "easeinquad(k, x, y)\n使用缓入-二次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinquart": "easeinquart(k, x, y)\n使用缓入-四次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinquint": "easeinquint(k, x, y)\n使用缓入-五次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeinsine": "easeinsine(k, x, y)\n使用缓入-正弦函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutback": "easeoutback(k, x, y)\n使用缓出-回弹函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutbounce": "easeoutbounce(k, x, y)\n使用缓出-弹跳函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutcirc": "easeoutcirc(k, x, y)\n使用缓出-圆弧函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutcubic": "easeoutcubic(k, x, y)\n使用缓出-三次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutelastic": "easeoutelastic(k, x, y)\n使用缓出-橡皮筋函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutexpo": "easeoutexpo(k, x, y)\n使用缓出-指数函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutquad": "easeoutquad(k, x, y)\n使用缓出-二次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutquart": "easeoutquart(k, x, y)\n使用缓出-四次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutquint": "easeoutquint(k, x, y)\n使用缓出-五次方函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.function_explanation.easeoutsine": "easeoutsine(k, x, y)\n使用缓出-正弦函数在x和y之间插值。\n示例: https://easings.net/",
  "entity_model_features.config.variable_explanation.age": "年龄（以游戏刻为单位）",
  "entity_model_features.config.variable_explanation.anger_time": "实体剩余的愤怒时间（以游戏刻为单位）。攻击时从400-780开始，失去目标后倒数至0。",
  "entity_model_features.config.variable_explanation.anger_time_start": "anger_time 的初始值。",
  "entity_model_features.config.variable_explanation.day_count": "当前的天数。",
  "entity_model_features.config.variable_explanation.day_time": "当前的游戏日时间（0-24000刻）。",
  "entity_model_features.config.variable_explanation.death_time": "实体死亡的时间。从0计数到20。",
  "entity_model_features.config.variable_explanation.dimension": "当前维度。主世界: 0, 下界: -1, 末地: 1。",
  "entity_model_features.config.variable_explanation.distance": "实体与客户端玩家的距离（以方块为单位）。\n\n虽然为了方便添加了distance变量，但在OptiFine中可以用以下代码实现相同效果：\n\"var.distance\": \"sqrt(pow(pos_x - player_pos_x, 2) + pow(pos_y - player_pos_y, 2) + pow(pos_z - player_pos_z, 2))\"",
  "entity_model_features.config.variable_explanation.e": "欧拉数\n2.718281.....",
  "entity_model_features.config.variable_explanation.entity_variable.title": "实体变量",
  "entity_model_features.config.variable_explanation.entity_variable": "实体变量以 \"var.<名称>\" (浮点数) 或 \"varb.<名称>\" (布尔值) 的格式指定。\n\n名称可以是任何字符串，例如 \"var.xyz\", \"var.last_rx\" 等。\n\n该变量附加到被渲染的实体上，默认值为0或false。\n\n实体变量对于在帧之间存储动画数据非常有用。",
  "entity_model_features.config.variable_explanation.false": "常量值\nfalse",
  "entity_model_features.config.variable_explanation.fluid_depth": "浸没实体上方和下方的流体深度，如果未浸没则为0。",
  "entity_model_features.config.variable_explanation.fluid_depth_down": "浸没实体下方的流体深度，如果未浸没则为0。",
  "entity_model_features.config.variable_explanation.fluid_depth_up": "浸没实体上方的流体深度，如果未浸没则为0。",
  "entity_model_features.config.variable_explanation.frame_counter": "当前帧的索引（从0到720719，然后重置为0）。",
  "entity_model_features.config.variable_explanation.frame_time": "自上一帧以来的时间（以秒为单位）。",
  "entity_model_features.config.variable_explanation.global_variable.title": "全局变量",
  "entity_model_features.config.variable_explanation.global_variable": "全局变量以 \"global_var.<名称>\" (浮点数) 或 \"global_varb.<名称>\" (布尔值) 的格式指定。\n名称可以是任何字符串，例如 \"global_var.xyz\", \"global_var.last_rx\" 等。\n该变量是全局保存的，默认值为0或false。\n全局变量对于存储多个实体共用的动画数据非常有用。",
  "entity_model_features.config.variable_explanation.head_pitch": "头部俯仰角 (X轴旋转)",
  "entity_model_features.config.variable_explanation.head_yaw": "头部偏航角 (Y轴旋转)",
  "entity_model_features.config.variable_explanation.health": "实体当前生命值。",
  "entity_model_features.config.variable_explanation.height_above_ground": "实体离地面的高度。\n地面指实体下方具有碰撞箱的最高点。",
  "entity_model_features.config.variable_explanation.hurt_time": "实体受伤的时间。从10倒数到0。",
  "entity_model_features.config.variable_explanation.id": "实体的唯一数字标识符。\n对于同一个实体，此值始终相同。",
  "entity_model_features.config.variable_explanation.is_aggressive": "实体是否对玩家或其他实体具有攻击性。",
  "entity_model_features.config.variable_explanation.is_alive": "实体是否存活。",
  "entity_model_features.config.variable_explanation.is_blocking": "实体是否正在用盾牌格挡。",
  "entity_model_features.config.variable_explanation.is_burning": "实体是否着火。",
  "entity_model_features.config.variable_explanation.is_child": "实体是否处于幼年状态。",
  "entity_model_features.config.variable_explanation.is_climbing": "实体是否在攀爬可攀爬的方块，或者是否是爬在墙上的蜘蛛。",
  "entity_model_features.config.variable_explanation.is_crawling": "实体是否在爬行。",
  "entity_model_features.config.variable_explanation.is_first_person_hand": "游戏当前是否正在渲染第一人称手臂。",
  "entity_model_features.config.variable_explanation.is_gliding": "实体是否在滑翔。",
  "entity_model_features.config.variable_explanation.is_glowing": "实体是否具有发光效果。",
  "entity_model_features.config.variable_explanation.is_holding_item_left": "实体的左手槽位是否持有物品。",
  "entity_model_features.config.variable_explanation.is_holding_item_right": "实体的右手槽位是否持有物品。",
  "entity_model_features.config.variable_explanation.is_hurt": "实体是否正在受到伤害。",
  "entity_model_features.config.variable_explanation.is_in_ground": "三叉戟是否插在地面上。",
  "entity_model_features.config.variable_explanation.is_in_gui": "实体是否在GUI界面中。",
  "entity_model_features.config.variable_explanation.is_in_hand": "实体是否被持在手中。",
  "entity_model_features.config.variable_explanation.is_in_item_frame": "实体是否在物品展示框中。",
  "entity_model_features.config.variable_explanation.is_in_lava": "实体是否接触到熔岩。",
  "entity_model_features.config.variable_explanation.is_in_water": "实体是否接触到水。",
  "entity_model_features.config.variable_explanation.is_invisible": "实体是否具有隐身效果/NBT标签。",
  "entity_model_features.config.variable_explanation.is_jumping": "生物是否在跳跃。",
  "entity_model_features.config.variable_explanation.is_on_ground": "实体是否接触到地面。",
  "entity_model_features.config.variable_explanation.is_on_head": "实体是否被戴在另一个实体的头上。",
  "entity_model_features.config.variable_explanation.is_on_shoulder": "鹦鹉是否坐在你的肩膀上。",
  "entity_model_features.config.variable_explanation.is_ridden": "实体是否被另一个实体骑乘。",
  "entity_model_features.config.variable_explanation.is_riding": "实体是否正在骑乘另一个实体。",
  "entity_model_features.config.variable_explanation.is_right_handed": "玩家是否是右利手。",
  "entity_model_features.config.variable_explanation.is_sitting": "猫/狼/鹦鹉是否坐下。",
  "entity_model_features.config.variable_explanation.is_sneaking": "猫/豹猫是否在潜行。",
  "entity_model_features.config.variable_explanation.is_sprinting": "猫/豹猫是否在冲刺。",
  "entity_model_features.config.variable_explanation.is_swimming": "实体是否在游泳。",
  "entity_model_features.config.variable_explanation.is_swinging_left_arm": "实体是否正在挥舞左臂。注意，为false不代表另一只手臂正在挥舞。",
  "entity_model_features.config.variable_explanation.is_swinging_right_arm": "实体是否正在挥舞右臂。注意，为false不代表另一只手臂正在挥舞。",
  "entity_model_features.config.variable_explanation.is_tamed": "猫/狼/鹦鹉是否被驯服。",
  "entity_model_features.config.variable_explanation.is_using_item": "实体当前是否正在使用物品，例如玩家右击水桶。",
  "entity_model_features.config.variable_explanation.is_wet": "实体是否在水中/雨中。",
  "entity_model_features.config.variable_explanation.limb_speed": "四肢移动速度。范围从0到1（静止=0，冲刺=1）。",
  "entity_model_features.config.variable_explanation.limb_swing": "四肢动画计数器。当实体移动时以游戏刻为单位递增。",
  "entity_model_features.config.variable_explanation.max_health": "实体的最大生命值。",
  "entity_model_features.config.variable_explanation.model_part.title": "模型部件变量",
  "entity_model_features.config.variable_explanation.model_part": "模型变量的指定格式为：\n\"<模型>.<变量名>\"\n\n模型可以是：\n\"this\" - 当前自定义模型\n\"part\" - 自定义模型所附加到的原始部件模型\n\"<部件名>\" - 按部件名指定的原始模型\n\"<ID>\" - 按ID指定的自定义模型\n\"<部件>:<子ID>:<子子ID>:...\" - (分层) 从按部件名指定的原始模型开始，然后按ID查找子模型\n\"<ID>:<子ID>:<子子ID>:...\" - (分层) 从按ID指定的模型开始，然后按ID查找子模型\n\n如果存在重复，则使用按部件名或ID找到的第一个模型。\n按ID的模型搜索是深度的，在分层指定中也是如此。\n\n分层指定允许模型组（json部件模型）被重用于不同部件。\n例如，一个手部模型（\"shoulder:upper_arm:elbow:forearm:palm:finger[1.5]\"）可以用于左手和右手。\n动画可以使用\"left_hand:finger1\"表示左手拇指，\"right_hand:finger1\"表示右手拇指。\n分层指定中的中间父级可以跳过。\n\n变量名\ntx, ty, tz - 位移 x, y, z\nrx, ry, rz - 旋转 x, y, z\nsx, sy, sz - 缩放 x, y, z\nvisible - 显示模型和子模型 (布尔值)\nvisible_boxes - 仅显示模型，不影响子模型 (布尔值)",
  "entity_model_features.config.variable_explanation.move_forward": "实体当前朝向的移动量。范围从-1到1，表示玩家当前移动向量单位圆的Y轴截距。1是向前，-1是向后。",
  "entity_model_features.config.variable_explanation.move_strafing": "实体当前朝向右侧90度方向的移动量。范围从-1到1，表示玩家当前移动向量单位圆的X轴截距。",
  "entity_model_features.config.variable_explanation.nan": "不是一个数字(NaN)\n在运行时抛出异常\n用于调试",
  "entity_model_features.config.variable_explanation.optifine_parts": "OptiFine 部件名:",
  "entity_model_features.config.variable_explanation.pi": "常量值\n3.1415926",
  "entity_model_features.config.variable_explanation.player_pos": "客户端玩家当前的世界坐标。",
  "entity_model_features.config.variable_explanation.player_rot": "客户端玩家当前的朝向。北方为0。",
  "entity_model_features.config.variable_explanation.pos": "实体当前的世界坐标。",
  "entity_model_features.config.variable_explanation.render_variable.title": "渲染变量",
  "entity_model_features.config.variable_explanation.render_variable": "渲染变量\nrender.shadow_size\n- 实体下方阴影的大小\nrender.shadow_opacity\n- 阴影的透明度\nrender.shadow_offset_x, render.shadow_offset_z\n- 阴影的位置\nrender.leash_offset_x, render.leash_offset_y, render.leash_offset_z\n- 拴绳连接点的位置",
  "entity_model_features.config.variable_explanation.rot": "实体当前的朝向。北方为0。",
  "entity_model_features.config.variable_explanation.rule_index": "当前匹配的随机模型规则的索引。默认为0。",
  "entity_model_features.config.variable_explanation.swing_progress": "实体攻击动作的进度。从0计数到1。",
  "entity_model_features.config.variable_explanation.time": "总游戏时间（以游戏刻为单位），与昼夜循环无关。",
  "entity_model_features.config.variable_explanation.true": "常量值\ntrue",
  "entity_model_features.config.variable_explanation.unknown_parts": "未映射的部件名:"
}